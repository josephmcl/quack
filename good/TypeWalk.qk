/* TypeWalk.qk
 * Demos type walking
 * 
 * Expected Output:
 * 
 * C4
 * C3
 * C2
 * C1
 * 
 */

class C1()  extends Obj {
   def foo():  C1 {
       return C1(); 
   }
   def PRINT(): Nothing {
	"C1\n".PRINT();
	return;
   }
}

class C2() extends C1 {
   def foo():  C1 {
        return C1();    /* Conforms to C1.foo() */
   }
   def PRINT(): Nothing {
	"C2\n".PRINT();
	return;
   }
}

class C3() extends C2 { 
   def foo(): C2 {
        return C2();   /* Conforms to C2.foo() */
   }
   def PRINT(): Nothing {
	"C3\n".PRINT();
	return;
   }
}

class C4() extends C3 {
    def foo() : C3 {
         return C3();  /* Conforms to C3.foo() */
    }
    def PRINT(): Nothing {
	"C4\n".PRINT();
	return;
    }
}

x = C4();    
a = 0;       
while ( a < 4 ) {
   x.PRINT(); /* before running, what do we expect to be printed? What is x's type? */
   x = x.foo();  
   a = a + 1;
}
 

